{"ast":null,"code":"import { ApiService } from './api.services';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class PedidoService extends ApiService {\n  constructor() {\n    super(...arguments);\n    this.apiUrl = 'https://localhost:44365/Dados';\n  }\n  listarPedidos(status) {\n    const query = status ? `pedidos?status=${status}` : 'Pedidos';\n    return this.get(query);\n  }\n  criarPedido(pedido) {\n    return this.post('Pedidos', pedido);\n  }\n  // atualizarStatus(id: number, status: string) {\n  //   return this.http.patch(`Pedidos/${id}/status`, { status });\n  // }\n  atualizarStatus(id, status) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    console.log('teste' + status);\n    return this.patch(`Pedidos/${id}/status`, JSON.stringify(status),\n    // envia uma string JSON, não objeto\n    {\n      headers\n    });\n  }\n  static {\n    this.ɵfac = /*@__PURE__*/function () {\n      let ɵPedidoService_BaseFactory;\n      return function PedidoService_Factory(t) {\n        return (ɵPedidoService_BaseFactory || (ɵPedidoService_BaseFactory = i0.ɵɵgetInheritedFactory(PedidoService)))(t || PedidoService);\n      };\n    }();\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PedidoService,\n      factory: PedidoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,gBAAgB;AAI3C,SAAqBC,WAAW,QAAQ,sBAAsB;;AAK9D,OAAM,MAAOC,aAAc,SAAQF,UAAU;EAH7CG;;IAIW,WAAM,GAAG,+BAA+B;;EAIjDC,aAAa,CAACC,MAAe;IAC3B,MAAMC,KAAK,GAAGD,MAAM,GAAG,kBAAkBA,MAAM,EAAE,GAAG,SAAS;IAC7D,OAAO,IAAI,CAACE,GAAG,CAAWD,KAAK,CAAC;EAClC;EAEAE,WAAW,CAACC,MAAc;IACxB,OAAO,IAAI,CAACC,IAAI,CAAS,SAAS,EAAED,MAAM,CAAC;EAC7C;EAEA;EACA;EACA;EACAE,eAAe,CAACC,EAAU,EAAEP,MAAc;IAC1C,MAAMQ,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvEa,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGV,MAAM,CAAC;IAC7B,OAAO,IAAI,CAACW,KAAK,CACf,WAAWJ,EAAE,SAAS,EACtBK,IAAI,CAACC,SAAS,CAACb,MAAM,CAAC;IAAE;IACxB;MAAEQ;IAAO,CAAE,CACZ;EACF;;;;;qGAzBYX,aAAa,SAAbA,aAAa;MAAA;IAAA;EAAA;;;aAAbA,aAAa;MAAAiB,SAAbjB,aAAa;MAAAkB,YAFZ;IAAM;EAAA","names":["ApiService","HttpHeaders","PedidoService","constructor","listarPedidos","status","query","get","criarPedido","pedido","post","atualizarStatus","id","headers","console","log","patch","JSON","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Bruno Silva\\Desktop\\system_fullStack\\Angular_project\\pedidos-front\\src\\app\\core\\services\\pedido.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ApiService } from './api.services';\nimport { Pedido } from '../models/pedido.model';\nimport { Observable } from 'rxjs';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PedidoService extends ApiService {\n   private apiUrl = 'https://localhost:44365/Dados';\n\n\n\n  listarPedidos(status?: string): Observable<Pedido[]> {\n    const query = status ? `pedidos?status=${status}` : 'Pedidos';\n    return this.get<Pedido[]>(query);\n  }\n\n  criarPedido(pedido: Pedido): Observable<Pedido> {\n    return this.post<Pedido>('Pedidos', pedido);\n  }\n\n  // atualizarStatus(id: number, status: string) {\n  //   return this.http.patch(`Pedidos/${id}/status`, { status });\n  // }\n  atualizarStatus(id: number, status: string) {\n  const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  console.log('teste' + status)\n  return this.patch(\n    `Pedidos/${id}/status`,\n    JSON.stringify(status), // envia uma string JSON, não objeto\n    { headers }\n  );\n }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}