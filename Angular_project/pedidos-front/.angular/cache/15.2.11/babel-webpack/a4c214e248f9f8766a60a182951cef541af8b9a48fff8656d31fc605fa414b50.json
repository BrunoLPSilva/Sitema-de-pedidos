{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services/pedido.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../components/status-selector/status-selector.component\";\nexport class AtualizarStatusComponent {\n  constructor(route, pedidoService) {\n    this.route = route;\n    this.pedidoService = pedidoService;\n    this.novoStatus = 'Pendente';\n    this.pedido = {};\n  }\n  ngOnInit() {\n    this.idPedido = Number(this.route.snapshot.paramMap.get('id'));\n  }\n  atualizarStatus() {\n    console.log(this.idPedido);\n    this.pedidoService.atualizarStatus(this.idPedido, this.novoStatus).subscribe({\n      next: () => alert('Status atualizado com sucesso!'),\n      error: err => console.error('Erro ao atualizar:', err)\n    });\n  }\n  static {\n    this.ɵfac = function AtualizarStatusComponent_Factory(t) {\n      return new (t || AtualizarStatusComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PedidoService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AtualizarStatusComponent,\n      selectors: [[\"app-atualizar-status\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [3, \"status\", \"statusSelecionado\"], [3, \"click\"]],\n      template: function AtualizarStatusComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Atualizar Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"label\");\n          i0.ɵɵtext(3, \"ID do Pedido:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function AtualizarStatusComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.idPedido = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"app-status-selector\", 1);\n          i0.ɵɵlistener(\"statusSelecionado\", function AtualizarStatusComponent_Template_app_status_selector_statusSelecionado_5_listener($event) {\n            return ctx.novoStatus = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AtualizarStatusComponent_Template_button_click_6_listener() {\n            return ctx.atualizarStatus();\n          });\n          i0.ɵɵtext(7, \"Atualizar\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.idPedido);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"status\", ctx.novoStatus);\n        }\n      },\n      dependencies: [i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel, i4.StatusSelectorComponent],\n      styles: [\"label[_ngcontent-%COMP%] {\\n  display: block;\\n  font-weight: bold;\\n  margin-bottom: 0.5rem;\\n  color: #333;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n  padding: 0.5rem;\\n  border-radius: 5px;\\n  border: 1px solid #ccc;\\n  margin-bottom: 1rem;\\n  font-size: 1rem;\\n  width: 200px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXR1YWxpemFyLXN0YXR1cy9hdHVhbGl6YXItc3RhdHVzLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vQnJ1bm8lMjBTaWx2YS9EZXNrdG9wL3N5c3RlbV9mdWxsU3RhY2svQW5ndWxhcl9wcm9qZWN0L3BlZGlkb3MtZnJvbnQvc3JjL2FwcC9wYWdlcy9hdHVhbGl6YXItc3RhdHVzL2F0dWFsaXphci1zdGF0dXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtBQ0NGIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcclxuICBjb2xvcjogIzMzMztcclxufVxyXG5cclxuc2VsZWN0IHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG59XHJcbiIsImxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gIGNvbG9yOiAjMzMzO1xufVxuXG5zZWxlY3Qge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICB3aWR0aDogMjAwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;AASA,OAAM,MAAOA,wBAAwB;EAMnCC,YACUC,KAAqB,EACrBC,aAA4B;IAD5B,UAAK,GAALD,KAAK;IACL,kBAAa,GAAbC,aAAa;IANvB,eAAU,GAAW,UAAU;IAE/B,WAAM,GAAQ,EAAE;EAKb;EAEHC,QAAQ;IAEN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;EAChE;EAEAC,eAAe;IACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC;IAC1B,IAAI,CAACF,aAAa,CAACO,eAAe,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACQ,UAAU,CAAC,CAC/DC,SAAS,CAAC;MACTC,IAAI,EAAE,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MACnDC,KAAK,EAAEC,GAAG,IAAIP,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAEC,GAAG;KACtD,CAAC;EACN;;;uBAvBWlB,wBAAwB;IAAA;EAAA;;;YAAxBA,wBAAwB;MAAAmB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCTrCC,0BAAI;UAAAA,gCAAgB;UAAAA,iBAAK;UACzBA,6BAAO;UAAAA,6BAAa;UAAAA,iBAAQ;UAC5BA,gCAA8C;UAAzBA;YAAA;UAAA,EAAsB;UAA3CA,iBAA8C;UAC9CA,8CAAqF;UAA1CA;YAAA;UAAA,EAAyC;UAACA,iBAAsB;UAC3GA,iCAAoC;UAA5BA;YAAA,OAASC,qBAAiB;UAAA,EAAC;UAACD,yBAAS;UAAAA,iBAAS;;;UAFjCA,eAAsB;UAAtBA,sCAAsB;UACtBA,eAAqB;UAArBA,uCAAqB","names":["AtualizarStatusComponent","constructor","route","pedidoService","ngOnInit","idPedido","Number","snapshot","paramMap","get","atualizarStatus","console","log","novoStatus","subscribe","next","alert","error","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Bruno Silva\\Desktop\\system_fullStack\\Angular_project\\pedidos-front\\src\\app\\pages\\atualizar-status\\atualizar-status.component.ts","C:\\Users\\Bruno Silva\\Desktop\\system_fullStack\\Angular_project\\pedidos-front\\src\\app\\pages\\atualizar-status\\atualizar-status.component.html"],"sourcesContent":["import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { PedidoService } from 'src/app/core/services/pedido.service';\n\n@Component({\n  selector: 'app-atualizar-status',\n  templateUrl: './atualizar-status.component.html',\n  styleUrls: ['./atualizar-status.component.scss']\n})\nexport class AtualizarStatusComponent implements OnInit {\n  idPedido!: number;\n  novoStatus: string = 'Pendente';\n\n  pedido: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private pedidoService: PedidoService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.idPedido = Number(this.route.snapshot.paramMap.get('id'));\n  }\n\n  atualizarStatus(): void {\n    console.log(this.idPedido)\n    this.pedidoService.atualizarStatus(this.idPedido, this.novoStatus)\n      .subscribe({\n        next: () => alert('Status atualizado com sucesso!'),\n        error: err => console.error('Erro ao atualizar:', err)\n      });\n  }\n}\n","<h2>Atualizar Status</h2>\n<label>ID do Pedido:</label>\n<input type=\"number\" [(ngModel)]=\"idPedido\" />\n<app-status-selector [status]=\"novoStatus\" (statusSelecionado)=\"novoStatus = $event\"></app-status-selector>\n<button (click)=\"atualizarStatus()\">Atualizar</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}