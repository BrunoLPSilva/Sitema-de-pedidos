{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction PedidoListComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pedido_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" ID: \", pedido_r1.id, \" | Cliente: \", pedido_r1.cliente, \" | Total: \", ctx_r0.calcularTotal(pedido_r1), \" | Status: \", pedido_r1.status, \" \");\n  }\n}\nexport class PedidoListComponent {\n  constructor() {\n    this.pedidos = [];\n    this.statusFiltro = '';\n  }\n  filtrarPedidos() {\n    // Em projeto real, use serviço ou Output\n  }\n  calcularTotal(pedido) {\n    return pedido.itens.reduce((soma, item) => soma + item.quantidade * item.precoUnitario, 0);\n  }\n  static {\n    this.ɵfac = function PedidoListComponent_Factory(t) {\n      return new (t || PedidoListComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PedidoListComponent,\n      selectors: [[\"app-pedido-list\"]],\n      inputs: {\n        pedidos: \"pedidos\"\n      },\n      decls: 11,\n      vars: 2,\n      consts: [[3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [\"value\", \"Pendente\"], [\"value\", \"Processado\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function PedidoListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"label\");\n          i0.ɵɵtext(1, \"Status:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"select\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function PedidoListComponent_Template_select_ngModelChange_2_listener($event) {\n            return ctx.statusFiltro = $event;\n          })(\"change\", function PedidoListComponent_Template_select_change_2_listener() {\n            return ctx.filtrarPedidos();\n          });\n          i0.ɵɵelementStart(3, \"option\", 1);\n          i0.ɵɵtext(4, \"Todos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"option\", 2);\n          i0.ɵɵtext(6, \"Pendente\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"option\", 3);\n          i0.ɵɵtext(8, \"Processado\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"ul\");\n          i0.ɵɵtemplate(10, PedidoListComponent_li_10_Template, 2, 4, \"li\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.statusFiltro);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.pedidos);\n        }\n      },\n      dependencies: [i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IAQEA,0BAAmC;IACjCA,YAGF;IAAAA,iBAAK;;;;;IAHHA,eAGF;IAHEA,oKAGF;;;ACLF,OAAM,MAAOC,mBAAmB;EALhCC;IAMW,YAAO,GAAU,EAAE;IAC5B,iBAAY,GAAW,EAAE;;EAEzBC,cAAc;IACZ;EAAA;EAGFC,aAAa,CAACC,MAAW;IACvB,OAAOA,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,IAAY,EAAEC,IAAS,KAAKD,IAAI,GAAGC,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACE,aAAa,EAAE,CAAC,CAAC;EACzG;;;uBAVWV,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAW;MAAAC;QAAAC;MAAA;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDPhClB,6BAAO;UAAAA,uBAAO;UAAAA,iBAAQ;UACtBA,iCAA+D;UAAvDA;YAAA;UAAA,EAA0B;YAAA,OAAWmB,oBAAgB;UAAA,EAA3B;UAChCnB,iCAAiB;UAAAA,qBAAK;UAAAA,iBAAS;UAC/BA,iCAAyB;UAAAA,wBAAQ;UAAAA,iBAAS;UAC1CA,iCAA2B;UAAAA,0BAAU;UAAAA,iBAAS;UAGhDA,0BAAI;UACFA,oEAIK;UACPA,iBAAK;;;UAZGA,eAA0B;UAA1BA,0CAA0B;UAOTA,eAAU;UAAVA,qCAAU","names":["i0","PedidoListComponent","constructor","filtrarPedidos","calcularTotal","pedido","itens","reduce","soma","item","quantidade","precoUnitario","selectors","inputs","pedidos","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Bruno Silva\\Desktop\\system_fullStack\\Angular_project\\pedidos-front\\src\\app\\components\\pedido-list\\pedido-list.component.html","C:\\Users\\Bruno Silva\\Desktop\\system_fullStack\\Angular_project\\pedidos-front\\src\\app\\components\\pedido-list\\pedido-list.component.ts"],"sourcesContent":["<label>Status:</label>\n<select [(ngModel)]=\"statusFiltro\" (change)=\"filtrarPedidos()\">\n  <option value=\"\">Todos</option>\n  <option value=\"Pendente\">Pendente</option>\n  <option value=\"Processado\">Processado</option>\n</select>\n\n<ul>\n  <li *ngFor=\"let pedido of pedidos\">\n    ID: {{pedido.id}} | Cliente: {{pedido.cliente}} |\n    Total: {{calcularTotal(pedido)}} |\n    Status: {{pedido.status}}\n  </li>\n</ul>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pedido-list',\n  templateUrl: './pedido-list.component.html',\n  styleUrls: ['./pedido-list.component.scss']\n})\nexport class PedidoListComponent {\n  @Input() pedidos: any[] = [];\n  statusFiltro: string = '';\n\n  filtrarPedidos() {\n    // Em projeto real, use serviço ou Output\n  }\n\n  calcularTotal(pedido: any): number {\n    return pedido.itens.reduce((soma: number, item: any) => soma + item.quantidade * item.precoUnitario, 0);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}