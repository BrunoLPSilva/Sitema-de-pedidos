{"ast":null,"code":"//import { environment } from '../../../../src/enviroments/enviroment';\nimport { environment } from 'src/enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  get(endpoint) {\n    return this.http.get(`${this.baseUrl}/${endpoint}`);\n  }\n  post(endpoint, data) {\n    return this.http.post(`${this.baseUrl}/${endpoint}`, data);\n  }\n  patch(endpoint, data) {\n    return this.http.patch(`${this.baseUrl}/${endpoint}`, data);\n  }\n  put(endpoint, data) {\n    return this.http.put(`${this.baseUrl}/${endpoint}`, data);\n  }\n  delete(endpoint) {\n    return this.http.delete(`${this.baseUrl}/${endpoint}`);\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA;AACA,SAASA,WAAW,QAAQ,4BAA4B;;;AAMxD,OAAM,MAAOC,UAAU;EAGrBC,YAAsBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAGH,WAAW,CAACI,MAAM;EAEG;EAEzCC,GAAG,CAAIC,QAAgB;IACrB,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAI,GAAG,IAAI,CAACE,OAAO,IAAID,QAAQ,EAAE,CAAC;EACxD;EAEAE,IAAI,CAAIF,QAAgB,EAAEG,IAAS;IACjC,OAAO,IAAI,CAACN,IAAI,CAACK,IAAI,CAAI,GAAG,IAAI,CAACD,OAAO,IAAID,QAAQ,EAAE,EAAEG,IAAI,CAAC;EAC/D;EAEAC,KAAK,CAAIJ,QAAgB,EAAEG,IAAS;IAClC,OAAO,IAAI,CAACN,IAAI,CAACO,KAAK,CAAI,GAAG,IAAI,CAACH,OAAO,IAAID,QAAQ,EAAE,EAAEG,IAAI,CAAC;EAChE;EAEAE,GAAG,CAAIL,QAAgB,EAAEG,IAAS;IAChC,OAAO,IAAI,CAACN,IAAI,CAACQ,GAAG,CAAI,GAAG,IAAI,CAACJ,OAAO,IAAID,QAAQ,EAAE,EAAEG,IAAI,CAAC;EAC9D;EAEAG,MAAM,CAAIN,QAAgB;IACxB,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAI,GAAG,IAAI,CAACL,OAAO,IAAID,QAAQ,EAAE,CAAC;EAC3D;;;uBAvBWL,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAY,SAAVZ,UAAU;MAAAa,YAFT;IAAM;EAAA","names":["environment","ApiService","constructor","http","apiUrl","get","endpoint","baseUrl","post","data","patch","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Bruno Silva\\Desktop\\system_fullStack\\Angular_project\\pedidos-front\\src\\app\\core\\services\\api.services.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n//import { environment } from '../../../../src/enviroments/enviroment';\r\nimport { environment } from 'src/enviroments/enviroment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  protected baseUrl = environment.apiUrl;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  get<T>(endpoint: string) {\r\n    return this.http.get<T>(`${this.baseUrl}/${endpoint}`);\r\n  }\r\n\r\n  post<T>(endpoint: string, data: any) {\r\n    return this.http.post<T>(`${this.baseUrl}/${endpoint}`, data);\r\n  }\r\n\r\n  patch<T>(endpoint: string, data: any) {\r\n    return this.http.patch<T>(`${this.baseUrl}/${endpoint}`, data);\r\n  }\r\n\r\n  put<T>(endpoint: string, data: any) {\r\n    return this.http.put<T>(`${this.baseUrl}/${endpoint}`, data);\r\n  }\r\n\r\n  delete<T>(endpoint: string) {\r\n    return this.http.delete<T>(`${this.baseUrl}/${endpoint}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}